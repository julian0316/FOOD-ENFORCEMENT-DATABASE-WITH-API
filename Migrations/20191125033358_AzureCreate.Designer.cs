// <auto-generated />
using System;
using Food_Enforcement.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Food_Enforcement.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20191125033358_AzureCreate")]
    partial class AzureCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+Meta", b =>
                {
                    b.Property<int>("Meta_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Results_ID")
                        .HasColumnType("int");

                    b.Property<string>("disclaimer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("license")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Meta_ID");

                    b.HasIndex("Results_ID");

                    b.ToTable("Meta");
                });

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+Openfda", b =>
                {
                    b.Property<int>("Openfda_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Openfda_ID");

                    b.ToTable("Openfda");
                });

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+Result", b =>
                {
                    b.Property<int>("Result_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Openfda_ID")
                        .HasColumnType("int");

                    b.Property<int?>("RootObject_ID")
                        .HasColumnType("int");

                    b.Property<string>("address_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("center_classification_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distribution_pattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("initial_firm_notification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("more_code_info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postal_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reason_for_recall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recall_initiation_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recall_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recalling_firm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("report_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("termination_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("voluntary_mandated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Result_ID");

                    b.HasIndex("Openfda_ID");

                    b.HasIndex("RootObject_ID");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+Results", b =>
                {
                    b.Property<int>("Results_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("limit")
                        .HasColumnType("int");

                    b.Property<int>("skip")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("Results_ID");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+RootObject", b =>
                {
                    b.Property<int>("RootObject_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Meta_ID")
                        .HasColumnType("int");

                    b.HasKey("RootObject_ID");

                    b.HasIndex("Meta_ID");

                    b.ToTable("RootObject");
                });

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+Meta", b =>
                {
                    b.HasOne("Food_Enforcement.Models.EF_Models+Results", "results")
                        .WithMany()
                        .HasForeignKey("Results_ID");
                });

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+Result", b =>
                {
                    b.HasOne("Food_Enforcement.Models.EF_Models+Openfda", "openfda")
                        .WithMany()
                        .HasForeignKey("Openfda_ID");

                    b.HasOne("Food_Enforcement.Models.EF_Models+RootObject", null)
                        .WithMany("results")
                        .HasForeignKey("RootObject_ID");
                });

            modelBuilder.Entity("Food_Enforcement.Models.EF_Models+RootObject", b =>
                {
                    b.HasOne("Food_Enforcement.Models.EF_Models+Meta", "meta")
                        .WithMany()
                        .HasForeignKey("Meta_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
